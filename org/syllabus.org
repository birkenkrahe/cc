#+TITLE:CSC 100.01 - Introduction to Programming, Spring 2023 Syllabus
#+AUTHOR: Marcus Birkenkrahe
#+options: toc:nil
#+startup: overview indent
* General Course Information

- Meeting Times: Monday/Wednesday/Friday, 15:00-15:50 hrs
- Meeting place: Lyon Building Room 104 (computer lab)
- Professor: Marcus Birkenkrahe
- Office: Derby Science Building 210
- Phone: (870) 307-7254 (office) / (501) 422-4725 (private)
- Office hours: Mon/Wed/Fri 16:15-16:45, Tue/Thu 16:00-16:30
- Textbook: King (2008). C Programming - A Modern Approach. New
  York: Norton. [[http://knking.com/books/c2/index.html][Online: knking.com]]

* Standard and course policies

- *Standard Lyon College Policies* are incorporated into this syllabus
  and can be found at: [[http://www.lyon.edu/standard-course-policies][lyon.edu/standard-course-policies]].

- The *Assignments and Honor Code* and the *Attendance Policy* are
  incorporated into this syllabus also and can be found at:
  [[https://tinyurl.com/LyonPolicy][tinyurl.com/LyonPolicy]].
  
* Objectives

This course introduces you to programming using C. We cover C++ as an
extension. C is a system programming language of pure power: it
enables you to converse with the computer at a level unknown to users
other high level languages many of which come from C. You also learn
about: compilers, working on the command line, text editors Emacs,
using C for Internet of Things (IoT) devices, cybersecurity, using
pseudocode and process modeling. You get a foundation in critical
thinking in concert with one of the three currently most popular
languages (the other two, according to the TIOBE index, are Python and
Java). You’ll learn some great tools: we use the “hacker’s editor”
Emacs, the world’s foremost software engineering platform, GitHub, and
BPMN for process modeling and pseudo code generation.

* Student Learning Outcomes

Students who complete CSC 100.01 "Introduction to programming in
C/C++", will be able to:

- Master basic sequential programming skills (conditional
  statements, loops, functions, input/output, use of data types)
- Explain the basic components of a procedural programming language
- Apply the basics of programming to solve a variety of quantitative
  problems
- Master computing infrastructure (compiler, editor, shell)
- Research and present a project as a team
- Know how to effectively present assignment results
- Be ready for "Data stuctures with C++" (CSC 240)
- Be ready for "Algorithms" (CSC 265)
- Improve data literacy

* Course requirements

- No prior knowledge required
- Curiosity is essential
- Experience with computers is useful but not critical

* Grading system

You should be able to see your current grade at any time using the
Canvas gradebook for the course.

| REQUIREMENT             | UNITS | PPU | TOTAL | % of TOTAL |
|-------------------------+-------+-----+-------+------------|
| Final exam              |     1 | 100 |   100 |        25. |
| Programming assignments |    10 |  10 |   100 |        25. |
| Class practice          |    10 |  10 |   100 |        25. |
| Multiple-choice tests   |    10 |  10 |   100 |        25. |
| Project sprint reviews  |     0 |   0 |     0 |          0 |
|-------------------------+-------+-----+-------+------------|
| TOTAL                   |       |     |   400 |       100. |
|-------------------------+-------+-----+-------+------------|
#+TBLFM: @2$4=$2*$3::@2$5=(@2$4/@7$4)*100::@3$4=$2*$3::@3$5=(@3$4/@7$4)*100::@4$4=$2*$3::@4$5=(@4$4/@7$4)*100::@5$4=@5$2*@5$3::@5$5=(@5$4/@7$4)*100::@6$4=$2*$3::@6$5=(@6$4/@7$4)*100::@7$4=vsum(@2..@5)::@7$5=vsum(@2..@5)

* Grading table

This table is used to convert completion rates into letter grades. For
the midterm results, letter grades still carry signs, while for the
term results, only straight letters are given (by rounding up).
|--------+---------------+---------------------------|
|      *%* | *Midterm Grade* | *Final Grade*             |
|--------+---------------+---------------------------|
| 100-98 | A+            |                           |
|  97-96 | A             | A (passed - very good)    |
|  95-90 | A-            |                           |
|--------+---------------+---------------------------|
|  89-86 | B+            |                           |
|  85-80 | B             | B (passed - good)         |
|  79-76 | B-            |                           |
|--------+---------------+---------------------------|
|  75-70 | C+            |                           |
|  69-66 | C             | C (passed - satisfactory) |
|  65-60 | C-            |                           |
|--------+---------------+---------------------------|
|  59-56 | D+            |                           |
|  55-50 | D             | D (passed)                |
|--------+---------------+---------------------------|
|   49-0 | F             | F (failed)                |
|--------+---------------+---------------------------|

* Schedule and session content

For *important dates*, see the 2022-2023 Academic Calendar at:
[[https://catalog.lyon.edu/202223-academic-calendar][catalog.lyon.edu/202223-academic-calendar]]

| WK | DATE            | ASSIGNMENT     | TEXTBOOK CHAPTER     | TEST |
|----+-----------------+----------------+----------------------+------|
|  1 | Jan 11,13       |                |                      |      |
|----+-----------------+----------------+----------------------+------|
|  2 | Jan 18,20       | Emacs Tutorial | 1 Introducing C      |    1 |
|----+-----------------+----------------+----------------------+------|
|  3 | Jan 23,25,27    | Program 1      | 2 C Fundamentals     |    2 |
|----+-----------------+----------------+----------------------+------|
|  4 | Jan 30, Feb 1,3 | Program 2      | 3 Input/Output       |    3 |
|----+-----------------+----------------+----------------------+------|
|  5 | Feb 6,8,10      |                | 4 Expressions        |      |
|----+-----------------+----------------+----------------------+------|
|  6 | Feb 13,15,17    | Program 3      | 5 Selection          |    4 |
|----+-----------------+----------------+----------------------+------|
|  7 | Feb 20,22,24    | Program 4      | 6 Loops              |    5 |
|----+-----------------+----------------+----------------------+------|
|  8 | Mar 1,3         | Program 5      | 7 Basic types        |    6 |
|----+-----------------+----------------+----------------------+------|
|  9 | Mar 6,8,10      |                | 8 Arrays             |      |
|----+-----------------+----------------+----------------------+------|
| 10 | Mar 13,15,17    | Program 6      | 9 Functions          |    7 |
|----+-----------------+----------------+----------------------+------|
| 11 | Mar 27,19,31    | Program 7      | 11 Pointers          |    8 |
|----+-----------------+----------------+----------------------+------|
| 12 | Apr 3,5         | Program 8      | 12 Pointers & Arrays |    9 |
|----+-----------------+----------------+----------------------+------|
| 13 | Apr 10,12,14    |                | 13 Strings           |   10 |
|----+-----------------+----------------+----------------------+------|
| 14 | Apr 17,19,21    | Program 9      | 14 The Preprocessor  |      |
|----+-----------------+----------------+----------------------+------|
| 15 | Apr 24,26,28    | Program 10     | C vs. C++            |      |
|----+-----------------+----------------+----------------------+------|
| 16 | May 1, 3        |                |                      |      |
|----+-----------------+----------------+----------------------+------|
