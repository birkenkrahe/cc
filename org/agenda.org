#+TITLE: Agenda - Introduction to programming in C++
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: Lyon College, Spring 2023
#+STARTUP:overview hideblocks indent
#+OPTIONS: toc:nil num:nil ^:nil
#+attr_html: :width 400px
[[../img/cover.jpg]]
* Week 1 - Course overview & introduction
#+attr_html: :width 400px
[[../img/week1.png]]

1) [X] Entry *survey* - [[https://docs.google.com/forms/d/1yz2EtuSin3r54zMG1d_JCnnVAGb0XI8cP-Yvr7FmZbo/edit#responses][review of your responses]]
2) [X] Course *overview* - assignments, grading, topics, platforms
3) [X] The C programming *toolchain*: course infrastructure
4) [X] *Practice:* the C programming toolchain

** Review topics/questions (Friday 13-Jan)
#+attr_latex: :width 400px
#+caption: Illustration of ignorance and ignorance of your own ignorance
[[../img/dunningkruger.png]]

Test yourself![fn:1]

Graph: hype cycle (like [[https://www.gartner.com/en/research/methodologies/gartner-hype-cycle][Gartner graph of emerging technologies]]).

- Why is computing infrastructure important?
- What is meta data?
- What is a compiler?

** Why is computing infrastructure important?
#+attr_latex: :width 400px
#+caption: Layers between you and a document on your computer
[[../img/0_infrastructure.jpg]]

- *Scalability:* when you want to go from 10 customers to 1,000,000

- *Reliability:* systems must be available and performant when needed

- *Security:* protect against unauthorized access and cyberthreats

- *Adaptability:* businesses must adapt quickly to stay competitive

- *Changeability:* IT changes faster than most other technologies

** What is meta data?
#+attr_latex: :width 400px
#+caption: Org-mode file with visible meta data
[[../img/0_meta.png]]
#+attr_latex: :width 400px
#+caption: Org-mode file with hidden meta data
[[../img/0_meta1.png]]

*Meta data is data that describes other data.* It provides information
about the characteristics of other data, such as its content, format,
and structure. Meta data can be used to describe many different types
of data, including files, images, videos, documents, and databases.

** What is a compiler (e.g. GCC)?
#+attr_latex: :width 400px
#+caption: Compiler (source: High performance R computing, Packt)
[[../img/compiler.png]]

- A compiler is a type of program that takes *source code* written in a
  high-level programming language and converts it into *machine code*.

- Machine code can be executed directly by a computer's central
  processing unit (CPU).

- The machine code produced by a compiler is specific to the
  architecture of the computer it is being run on.

* Week 2 - Programming environment
#+attr_html: :width 400px
[[../img/0_gnuemacs.png]]

Review:
- [ ] Week 1
- [ ] Glossary terms

Lecture
- [ ] Demo: REPL (replit.com)
- [ ] Lecture: Introduction to C

Practice:
- [ ] Practice: first literate C program (submit Jan 20)
- [ ] Practice/assignment: Emacs tutorial (submit Jan 23)

Test:
- [ ] Test 1 on Monday, Jan-23 (on everything we've done so far)
  
* Review week 1
#+attr_html: :width 400px
#+caption: Literate programming with CWEB
[[../img/cweb.png]]

- [X] What is the command line interface? ("The black thing")
- [X] What is literate programming?
- [X] What is syntax highlighting?
- [X] What is Emacs?

* What is the command line interface?
#+attr_html: :width 400px
#+caption: Command line interface (WSL on Windows with Ubuntu 22.04 LTS)
[[../img/cli.png]]

* What is literate programming?
#+attr_html: :width 400px
#+caption: Literate programming with C and Emacs Org-mode
[[../img/0_litprog1.png]]

* What is syntax highlighting?
#+attr_html: :width 400px
#+caption: Raw file without syntax highlighting
[[../img/0_raw.png]]
#+attr_html: :width 400px
#+caption: Syntax highlighting on GitHub (Emacs-Lisp file)
[[../img/0_syntax.png]]

* What is Emacs?
#+attr_latex: :width 400px
#+caption: GNU Emacs screen and properties
[[../img/0_gnuemacs1.png]]

* TODO (Home) Assignment: Emacs tutorial
#+attr_latex: :width 300px
[[../img/0_gnuemacs.png]]

- We're going to begin this assignment together in class - but you may
  need to finish it at home (or in the MAC or in one of the computer
  labs, Lyon 104 or Derby 209) on your own.

- To install Emacs on your computer, follow the instructions in the
  [[https://github.com/birkenkrahe/org/blob/master/FAQ.org][GitHub FAQ]]. When you're at it, you should also install a C compiler.

- If you have trouble installing anything on your own computer, bring
  it to class or come to my office hours (Mon-Fri, 4.15-4.45 PM).

- Here is a [[https://www.youtube.com/playlist?list=PLwgb17bzeNygo8GU6SivwwjsQj9QabqAJ][YouTube playlist]] with 11 short video tutorials on Emacs
  installation and use as a literate programming tool (total: 90 min).

- Open the Tutorial [[https://github.com/birkenkrahe/cc/blob/piHome/org/tutorial.org][in GitHub]] and follow the instructions:
  [[https://tinyurl.com/emacstutor][tinyurl.com/emacstutor]]
  
- There is also a [[https://github.com/birkenkrahe/cc/blob/piHome/pdf/tutorial.pdf][PDF version]] if you like to print things out.

- When you've completed the instructions, you should have a
  time-stamped Org-mode file that you can [[https://lyon.instructure.com/courses/1014/assignments/6479][upload to Canvas]].

* TODO REPL demo @replit.com
#+attr_latex: :width 400px
#+caption: C IDE at replit.com
[[../img/cc_replit.png]]

- You can open this program online at [[https://tinyurl.com/52p288p5][tinyurl.com/52p288p5]]

- You will only see all parts of it if you register: follow the invite
  link [[https://replit.com/join/xpersfuvad-marcusbirkenkra][replit.com/join/xpersfuvad-marcusbirkenkra]]

- Then ~Continue with Google~ using your Lyon GMail account:
  #+attr_latex: :width 400px
  #+caption: C IDE at replit.com
  [[../img/0_replit.png]]

* TODO Preparing for a test (2.5% each)
#+attr_latex: :width 400px
#+caption: Medieval food preparation
[[../img/preptest.jpg]]

*How do you prepare for a test?*[fn:2]

* References

Powered by OpenAI's GPT-3 language model, URL: [[https://chat.openai.com][chat.openai.com]].

* Footnotes
[fn:2] (1) Look through the material on GitHub ([[https://github.com/birkenkrahe/cc/tree/piHome/org][Markdown]] or [[https://github.com/birkenkrahe/cc/tree/piHome/pdf][PDF]]). (2)
Check the review of questions at the start of each session. (3) After
each class room session: write down what you didn't understand and ask
me after class or before the next class (or send me an email).

[fn:1]"The Dunning-Kruger effect was first discovered and written
about in 1999, by researchers David Dunning and Justin Kruger at
Cornell University. The researchers spotted how much people
overestimated their own abilities in daily life—think of the guy in
class who keeps raising his hand to relay his useless ideas—and coined
the term “dual burden”. Dual burden was used to describe that these
people suffer from two things: ignorance, and ignorance of their own
ignorance. The researchers tested random participants on tests of
humour, grammar, and logical reasoning. They found that people who
ranked in the bottom 25% of any of these test scores tended to predict
themselves to be at the top of the pack. When they scored in the 12th
percentile, they estimated themselves to be in the 62nd. On the flip
side, people in the top 25% predicted their scores to be slightly
lower than they actually were." (Source: [[https://thedecisionlab.com/biases/dunning-kruger-effect][thedecisionlab.com]])
