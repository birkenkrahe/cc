#+TITLE:COURSE OVERVIEW
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: CSC 100 - Introduction to programming - Spring 2023
#+STARTUP: overview hideblocks indent
#+OPTIONS: toc:nil num:nil ^:nil
#+attr_latex: :width 400px
#+caption: Dashboard of a sportscar of the 1970s
[[../img/cover.jpg]]
* Who is your lecturer?
#+attr_latex: :width 400px
#+caption: Photo of Poppy as a puppy
[[../img/0_poppy.png]]

- Not cats OR dogs, but [[https://drive.google.com/file/d/1z-0cbqfXPA_6HMgIxb043CN5qCUJLEYz/view?usp=sharing][cats AND dogs]]
- Physicist by training ([[https://images.nature.com/original/magazine-assets/d41586-022-01388-6/d41586-022-01388-6_20499086.jpg][making sense of this]])
- Teacher by profession ([[https://m.media-amazon.com/images/I/91UJz-ti6BL.jpg][making sense of this]])
- Data scientist by choice ([[https://media.wired.com/photos/601c6246898afb612573ad4c/master/w_960,c_limit/BLACK%20SUN%20#34.jpg][making sense of this]])
- Lyon College since 2021 ([[https://www.visitberlin.de/system/files/styles/visitberlin_hero_visitberlin_desktop_2x/private/image/eberswalderstrasse26_c_visitBerlin_Foto_Dagmar_Schwelle_web.jpg?h=1c9b88c9&itok=xMVdiKwM][from Berlin, Germany]])
* My first programming languages
#+attr_latex: :width 400px
#+caption: Texas Instruments TI-99/4 16-bit microcomputer, 1979
[[../img/0_ti99.jpg]]

- My first programming languages:
  1) BASIC - Beginner's All-purpose Symbolic Instruction Code (1979)
  2) FORTRAN - FORMula TRANslator (1985)
  3) C++ (1989)

- [ ] How many programming languages are there today?
     
* What do you expect from this course?
#+attr_latex: :width 400px
#+caption: Dandelion in the grass, by Aaron Burden, @Unsplash
[[../img/0_expectations.jpg]]

* What will you do in this course?
#+attr_latex: :width 300px
#+caption: Syllabus, Canvas (lyon.instructure.com) or GitHub (github.com/birkenkrahe/ds2)
[[../img/0_schedule.png]]

- We have a *textbook* - King, C Programming - A modern approach (2008)
- We have an *operating system* - Linux (maybe) or Windows/MacOS
- We have (more than) an *editor* - Emacs + Org-mode
- We have a *compiler* - GCC ([[https://raw.githubusercontent.com/birkenkrahe/cc/piHome/img/0_gcc_mac.png][also on a Mac]])
  
  
* How will you be evaluated?
#+attr_latex: :width 400px
#+caption: Source: syllabus, Canvas (lyon.instructure.com) or GitHub (github.com/birkenkrahe/ml)
[[../img/0_grades.png]]

- All course requirements have deadlines
- Late submissions will be penalized (loss of points)
- Final exam will be sourced by term test questions
- Programming assignments are home assignments
- In-class practices are "literate programming" exercises

* Which tools are you going to use?
#+attr_latex: :width 400px
#+caption: Unsplash, workshop
[[../img/0_tools.jpg]]

- [[https://lyon.instructure.com/][Canvas]] (learning management system)

- [[https://github.com/birkenkrahe/cc][GitHub repository]] (all course materials except tests)

- [[https://github.com/birkenkrahe/org/blob/master/FAQ.org][GNU Emacs + ESS + R]] (literate programming environment)

- [[https://en.wikipedia.org/wiki/Command-line_interface][Command line interface]] / interpreter - (shell / replit.com)

* The (new) Canvas LMS
#+attr_latex: :width 400px
#+caption: Canvas
[[../img/0_canvas.png]]

- Announcements
- Assignments (Programming assignments and in-class practice)
- Zoom links (participate/cloud recording)
- Course links (GitHub, Whiteboard)
- Gradebook

* The (popular) GitHub platform
#+attr_latex: :width 400px
#+caption: My GitHub dashboard - close to 4,000 commits in 2022 (100,000 lines of code?)
[[../img/0_github.png]]

- [[https://github.com/birkenkrahe][GitHub]] is the most popular software development platform.

- It's now owned by Microsoft (which is becoming a problem)

- Here for you: all course materials, and the course FAQ

* The (feared) Emacs editor
#+attr_latex: :width 400px
#+caption: My GitHub dashboard
[[../img/0_litprog.png]]

* Practice: first "literate" C program!
#+attr_latex: :width 400px
#+caption: My GitHub dashboard
[[../img/0_books.png]]

Let's set Emacs up, write and run a first "literate" C program!

1) Open the command line terminal with ~CMD~ in the search field

2) At the prompt, type ~gcc --version~

3) Open https://github.com/birkenkrahe/org/ in a browser

4) Navigate to the repository ~emacs~ in GitHub

5) Click on the file name ~.emacs~ to open it

6) Open the ~Raw~ version of this file (there's a button)

7) Right click to ~Save as~ and save file as ~emacs.txt~ in ~/Downloads~

8) Open a terminal by entering ~CMD~ in the Windows search bar

9) Pin the terminal to your taskbar

10) At the prompt, enter ~DIR emacs.txt~ - you should see the file

11) Enter ~emacs -nw -l emacs.txt~

12) Inside Emacs, click ~<F10>~ and ~ENTER~ to open a new file

13) At the prompt at the bottom of the screen, enter ~first.org~

14) Enter the following text (replace ~yourname~ with your own name):
    #+attr_latex: :width 400px
    [[../img/0_first.png]]

15) Run the program by putting the cursor anywhere on the code block
    and typing ~CTRL-c CTRL-c~ (or ~C-c C-c~)

16) Tangle the code with ~C-c C-v t~ (or ~M-x org-babel-tangle~)

17) Open a shell (terminal program) with ~ALT-x eshell~

18) At the prompt, enter ~ls -l first*~ - you should see ~first.C~

19) Enter ~gcc first.C -o hello~

20) Enter ~hello~ to run the program.

* When is the first assignment due?
#+attr_latex: :width 400px
#+caption: Four monks by Claudio Rinaldi (1852-1909)
[[../img/0_monks.png]]

- The first programming assignment is due on January 20. For late
  submissions, you lose 1 point per day (out of 10 possible points)

- The first in-class assignment is due on January 20. For late
  submissions, you lose 1 point per day (out of 10 possible points)
  
- We'll write the first weekly multiple-choice test on January 20,
  covering all of the material that was covered until then.

* What are you looking forward to?
#+attr_latex: :width 400px
[[../img/0_package.jpg]]

* The (convenient) online REPL
#+attr_latex: :width 400px
#+caption: C IDE at replit.com
[[../img/cc_replit.png]]

- You can open this program online at [[https://tinyurl.com/52p288p5][tinyurl.com/52p288p5]]

- You will only see all parts of it if you register: follow the invite
  link [[https://replit.com/join/xpersfuvad-marcusbirkenkra][replit.com/join/xpersfuvad-marcusbirkenkra]]

- Then ~Continue with Google~ using your Lyon GMail account:
  #+attr_latex: :width 400px
  #+caption: C IDE at replit.com
  [[../img/0_replit.png]]

* Next
#+attr_latex: :width 400px
#+caption: Introduction to C programming
[[../img/0_gnuemacs.png]]

#+attr_latex: :width 400px
#+caption: Introduction to C programming
[[../img/0_cprogramming.png]]

* References

- King K N (2008). C Programming - A Modern Approach. Norton.
